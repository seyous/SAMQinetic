// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SAM.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Inserting Object Is Displayed")]
    public partial class InsertingObjectIsDisplayedFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "InsertObjectDisplayed.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Inserting Object Is Displayed", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Insert placeholder objects displayed")]
        [NUnit.Framework.CategoryAttribute("insert")]
        [NUnit.Framework.TestCaseAttribute("geom placeholder", null)]
        [NUnit.Framework.TestCaseAttribute("man placeholder", null)]
        [NUnit.Framework.TestCaseAttribute("military placeholder", null)]
        [NUnit.Framework.TestCaseAttribute("seakeeping placeholder", null)]
        [NUnit.Framework.TestCaseAttribute("stub placeholder", null)]
        [NUnit.Framework.TestCaseAttribute("structure placeholder", null)]
        [NUnit.Framework.TestCaseAttribute("struct placeholder old", null)]
        public virtual void InsertPlaceholderObjectsDisplayed(string @object, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "insert"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Insert placeholder objects displayed", null, @__tags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
testRunner.Given("a user opens SAM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.When("the warning message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
testRunner.Then("the user can click on the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
testRunner.And("the user clicks on the Insert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
testRunner.And(string.Format("the insert object \"{0}\" is displayed", @object), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Insert Output objects displayed")]
        [NUnit.Framework.CategoryAttribute("insert")]
        [NUnit.Framework.TestCaseAttribute("graph diagram", null)]
        [NUnit.Framework.TestCaseAttribute("report", null)]
        [NUnit.Framework.TestCaseAttribute("report CSS definition", null)]
        [NUnit.Framework.TestCaseAttribute("report deckplan", null)]
        [NUnit.Framework.TestCaseAttribute("report deckplan review", null)]
        [NUnit.Framework.TestCaseAttribute("report global settinngs", null)]
        [NUnit.Framework.TestCaseAttribute("report schema", null)]
        [NUnit.Framework.TestCaseAttribute("view 2D", null)]
        public virtual void InsertOutputObjectsDisplayed(string @object, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "insert"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Insert Output objects displayed", null, @__tags);
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 25
testRunner.Given("a user opens SAM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
testRunner.When("the warning message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
testRunner.Then("the user can click on the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
testRunner.And("the user clicks on the Insert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
testRunner.And(string.Format("the insert object \"{0}\" is displayed", @object), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Insert Miscellaneous objects displayed")]
        [NUnit.Framework.CategoryAttribute("insert")]
        [NUnit.Framework.TestCaseAttribute("bitmap from file", null)]
        [NUnit.Framework.TestCaseAttribute("report", null)]
        [NUnit.Framework.TestCaseAttribute("design comparer", null)]
        [NUnit.Framework.TestCaseAttribute("display capture", null)]
        [NUnit.Framework.TestCaseAttribute("display case locker", null)]
        [NUnit.Framework.TestCaseAttribute("drawing", null)]
        [NUnit.Framework.TestCaseAttribute("earth axes workbook", null)]
        [NUnit.Framework.TestCaseAttribute("excel workbook", null)]
        [NUnit.Framework.TestCaseAttribute("fly through", null)]
        [NUnit.Framework.TestCaseAttribute("front panel", null)]
        [NUnit.Framework.TestCaseAttribute("goal seek", null)]
        [NUnit.Framework.TestCaseAttribute("graph", null)]
        [NUnit.Framework.TestCaseAttribute("graph 2Y", null)]
        [NUnit.Framework.TestCaseAttribute("graph polar", null)]
        [NUnit.Framework.TestCaseAttribute("spreadsheet", null)]
        [NUnit.Framework.TestCaseAttribute("switch object", null)]
        [NUnit.Framework.TestCaseAttribute("table custom user input", null)]
        [NUnit.Framework.TestCaseAttribute("tag", null)]
        [NUnit.Framework.TestCaseAttribute("texture map", null)]
        [NUnit.Framework.TestCaseAttribute("var", null)]
        [NUnit.Framework.TestCaseAttribute("weight", null)]
        [NUnit.Framework.TestCaseAttribute("weight distribution", null)]
        [NUnit.Framework.TestCaseAttribute("weight linear", null)]
        [NUnit.Framework.TestCaseAttribute("weight linear start end", null)]
        [NUnit.Framework.TestCaseAttribute("weight summary", null)]
        public virtual void InsertMiscellaneousObjectsDisplayed(string @object, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "insert"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Insert Miscellaneous objects displayed", null, @__tags);
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
testRunner.Given("a user opens SAM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
testRunner.When("the warning message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
testRunner.Then("the user can click on the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
testRunner.And("the user clicks on the Insert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And(string.Format("the insert object \"{0}\" is displayed", @object), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

