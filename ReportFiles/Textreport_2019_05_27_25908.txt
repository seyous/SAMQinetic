=> SAM.Features.CancelButtonAvailableFeature.CancelButtonAvailable
Given a user opens SAM
-> done: OpenSAMSteps.GivenAUserOpensSAM() (0.0s)
When the warning message is displayed
-> done: WarningDialogSteps.WhenTheWarningMessageIsDisplayed() (14.7s)
Then the user can click on the OK button
-> done: WarningDialogSteps.ThenTheUserCanClickOnTheOKButton() (0.4s)
And the user clicks on the Insert button
-> done: OpenInsertDialogSteps.ThenTheUserClicksOnTheInsertButton() (1.9s)
And the Cancel button is avaialable
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the Cancel button is avaialable")]
        public void ThenTheCancelButtonIsAvaialable()
        {
            ScenarioContext.Current.Pending();
        }

And the user confirms the cancel button is available
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the user confirms the cancel button is available")]
        public void ThenTheUserConfirmsTheCancelButtonIsAvailable()
        {
            ScenarioContext.Current.Pending();
        }

=> SAM.Features.CancelButtonAvailableFeature.CancelButtonClosesOnClick
Given a user opens SAM
-> done: OpenSAMSteps.GivenAUserOpensSAM() (0.0s)
When the warning message is displayed
-> done: WarningDialogSteps.WhenTheWarningMessageIsDisplayed() (14.2s)
Then the user can click on the OK button
-> done: WarningDialogSteps.ThenTheUserCanClickOnTheOKButton() (0.4s)
And the user clicks on the Insert button
-> done: OpenInsertDialogSteps.ThenTheUserClicksOnTheInsertButton() (1.9s)
And the Cancel button is available
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the Cancel button is available")]
        public void ThenTheCancelButtonIsAvailable()
        {
            ScenarioContext.Current.Pending();
        }

And the user click on the Cancel button
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the user click on the Cancel button")]
        public void ThenTheUserClickOnTheCancelButton()
        {
            ScenarioContext.Current.Pending();
        }

Then the insert dialog closes
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the insert dialog closes")]
        public void ThenTheInsertDialogCloses()
        {
            ScenarioContext.Current.Pending();
        }

=> SAM.Features.CancelButtonAvailableFeature.CancelButtonClosesOnEscape
Given a user opens SAM
-> done: OpenSAMSteps.GivenAUserOpensSAM() (0.0s)
When the warning message is displayed
-> done: WarningDialogSteps.WhenTheWarningMessageIsDisplayed() (14.3s)
Then the user can click on the OK button
-> done: WarningDialogSteps.ThenTheUserCanClickOnTheOKButton() (0.4s)
And the user clicks on the Insert button
-> done: OpenInsertDialogSteps.ThenTheUserClicksOnTheInsertButton() (1.9s)
And the Cancel button is available
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the Cancel button is available")]
        public void ThenTheCancelButtonIsAvailable()
        {
            ScenarioContext.Current.Pending();
        }

And the use press "Esc" key on the keyboard
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the use press ""(.*)"" key on the keyboard")]
        public void ThenTheUsePressKeyOnTheKeyboard(string esc)
        {
            ScenarioContext.Current.Pending();
        }

Then the insert dialog closes
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the insert dialog closes")]
        public void ThenTheInsertDialogCloses()
        {
            ScenarioContext.Current.Pending();
        }

=> SAM.Features.CancelButtonAvailableFeature
-> Using app.config
=> SAM.Features.DeSelectingAnObjectFeature.DeSelectAnObjectUsingSpacebarKey
Given a user opens SAM
-> done: OpenSAMSteps.GivenAUserOpensSAM() (0.0s)
When the warning message is displayed
-> done: WarningDialogSteps.WhenTheWarningMessageIsDisplayed() (14.3s)
Then the user can click on the OK button
-> done: WarningDialogSteps.ThenTheUserCanClickOnTheOKButton() (0.4s)
And the user clicks on the Insert button
-> done: OpenInsertDialogSteps.ThenTheUserClicksOnTheInsertButton() (2.0s)
And the user hover the mouse on an object
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the user hover the mouse on an object")]
        public void ThenTheUserHoverTheMouseOnAnObject()
        {
            ScenarioContext.Current.Pending();
        }

And the user press the spacebar on the keyboard
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the user press the spacebar on the keyboard")]
        public void ThenTheUserPressTheSpacebarOnTheKeyboard()
        {
            ScenarioContext.Current.Pending();
        }

Then the object is selected
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the object is selected")]
        public void ThenTheObjectIsSelected()
        {
            ScenarioContext.Current.Pending();
        }

And the user press the spacebar on the keyboard
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the user press the spacebar on the keyboard")]
        public void ThenTheUserPressTheSpacebarOnTheKeyboard()
        {
            ScenarioContext.Current.Pending();
        }

Then the object is deselected
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the object is deselected")]
        public void ThenTheObjectIsDeselected()
        {
            ScenarioContext.Current.Pending();
        }

And the user click the cancel button
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"the user click the cancel button")]
        public void ThenTheUserClickTheCancelButton()
        {
            ScenarioContext.Current.Pending();
        }

=> SAM.Features.DeSelectingAnObjectFeature.DeselectingObjectOnClick
